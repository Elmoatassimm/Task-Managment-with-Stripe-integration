name: Laravel CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK }}
      STRIPE_SECRET: ${{ secrets.STRIPE_SECRET_KEY }}
      MAIL_MAILER: log
      QUEUE_CONNECTION: database
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: validate Dependencies
        run: composer validate
      - name: Install Dependencies
        run: composer install --no-interaction
      - name: Generate key
        run: php artisan key:generate
      - name: Generate jwt key
        run: php artisan jwt:secret
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Migrations
        run: php artisan migrate --force
      - name: Run Pest Tests
        run: vendor/bin/pest

  deploy-production:
    needs: laravel-tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
